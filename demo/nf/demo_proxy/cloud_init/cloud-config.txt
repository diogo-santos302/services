#cloud-config
hostname: demo
password: demo
chpasswd:
  expire: False
package_update: true
packages:
  - nginx
  - python3
  - python3-pip
  - build-essential
  - libssl-dev
  - python3-cryptography
write_files:
  - path: /etc/nginx/nginx.conf
    content: |
      worker_processes 1;

      events { 
          worker_connections 1024; 
      }

      http {
          server {
              listen 80;
              server_name _;
              return 301 https://$host$request_uri;
          }

          server {
              listen 443 ssl;
              server_name _;

              ssl_certificate     /etc/nginx/ssl/localhost.crt;
              ssl_certificate_key /etc/nginx/ssl/localhost.key;
              ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
              ssl_ciphers         HIGH:!aNULL:!MD5;

              location / {
                  root html;
                  index echotest.html;
              }
          }
      }

  - path: /etc/cron.d/cronjob
    content: |
      * * * * * python3 /app/main.py && /usr/sbin/service nginx reload >> /var/log/cron.log 2>&1
    permissions: "0644"

  - path: /app/main.py
    content: |
      import datetime

      from cryptography.hazmat.primitives import serialization
      from cryptography.hazmat.primitives.asymmetric import rsa
      from cryptography import x509
      from cryptography.x509.oid import NameOID
      from cryptography.hazmat.primitives import hashes

      key = rsa.generate_private_key(
          public_exponent=65537,
          key_size=2048,
      )

      with open("/etc/nginx/ssl/localhost.key", "wb") as f:
          f.write(key.private_bytes(
              encoding=serialization.Encoding.PEM,
              format=serialization.PrivateFormat.TraditionalOpenSSL,
              encryption_algorithm=serialization.NoEncryption(),
          ))

      subject = issuer = x509.Name([
          x509.NameAttribute(NameOID.COUNTRY_NAME, "PT"),
          x509.NameAttribute(NameOID.STATE_OR_PROVINCE_NAME, "Aveiro"),
          x509.NameAttribute(NameOID.LOCALITY_NAME, "Aveiro"),
          x509.NameAttribute(NameOID.ORGANIZATION_NAME, "ITAV"),
          x509.NameAttribute(NameOID.COMMON_NAME, "localhost"),
      ])

      cert = x509.CertificateBuilder().subject_name(
          subject
      ).issuer_name(
          issuer
      ).public_key(
          key.public_key()
      ).serial_number(
          x509.random_serial_number()
      ).not_valid_before(
          datetime.datetime.now(datetime.timezone.utc)
      ).not_valid_after(
          datetime.datetime.now(datetime.timezone.utc) + datetime.timedelta(days=10)
      ).add_extension(
          x509.SubjectAlternativeName([x509.DNSName("localhost")]),
          critical=False,
      ).sign(key, hashes.SHA256())

      with open("/etc/nginx/ssl/localhost.crt", "wb") as f:
          f.write(cert.public_bytes(serialization.Encoding.PEM))

      print("Generated new key and certificate")
    permissions: "0755"

  - path: /etc/nginx/html/settings.js
    content: |
      var server = "wss://example.local";
      var iceServers = null;
    permissions: "0644"

  - path: /etc/hosts
    content: "10.255.31.249 example.local"
    append: true
runcmd:
  - mkdir -p /etc/nginx/ssl
  - python3 /app/main.py
  - crontab /etc/cron.d/cronjob
  - service cron start && nginx -g 'daemon off;'
